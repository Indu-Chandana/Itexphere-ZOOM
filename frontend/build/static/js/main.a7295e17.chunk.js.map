{"version":3,"sources":["features/counter/counterAPI.js","features/userSlice.js","axios.js","components/Modal.js","components/RoomContext.js","routes/CreateRoom.js","routes/Login.js","routes/Profile.js","components/CallPageFooter/CallPageFooter.js","components/utils/helpers.js","components/CallPageHeader/CallPageHeader.js","components/Messenger/PresentName.js","components/Messenger/Messenger.js","routes/Room.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","userSlice","createSlice","name","initialState","user","status","reducers","login","state","action","payload","logout","extraReducers","builder","addCase","pending","fulfilled","value","actions","selectUser","instance","axios","create","baseURL","Modal","open","children","onclose","useState","lang","setLang","capacity","setCapacity","input","setInput","createRoom","e","preventDefault","post","className","onChange","target","placeholder","disabled","selected","hidden","onClick","RoomContext","createContext","RoomProvider","peers","setPeers","socketName","setSocketName","twoSocketName","setTwoSocketName","Provider","CreateRoom","props","useContext","useSelector","roomnames","setRoomnames","isOpen","setIsOpen","dropDown","setDropDown","history","useHistory","useEffect","get","then","src","alt","prevState","image","email","push","clientId","render","renderProps","buttonText","onLogoutSuccess","window","location","reload","map","roomname","i","key","_id","Login","dispatch","useDispatch","Button","onSuccess","console","log","profileObj","imageUrl","isSignedIn","Profile","CallPageFooter","isAudio","toggleAudio","isVideo","toggleVideo","isPresenting","stopScreenShare","screenShare","disconnectCall","formatDate","timestamp","moment","format","CallPageHeader","isMessenger","setIsMessenger","messageAlert","setMessageAlert","interval","currentTime","setCurrentTime","setInterval","clearInterval","length","PresentName","item","two","Messenger","messages","sendMsg","messageList","message","handleChange","sendMessage","presentName","setPresentName","body","Container","styled","div","StyledVideo","video","Video","ref","useRef","peer","on","stream","current","srcObject","playsInline","autoPlay","videoConstraints","height","innerHeight","width","innerWidth","Room","socketRef","userVideo","peersRef","streamObj","setStreamObj","screenCastStream","setScreenCastStream","setIsPresenting","setIsAudio","setIsVideo","roomID","match","params","me","setMe","setMessages","setMessage","io","connect","navigator","mediaDevices","getUserMedia","audio","emit","users","forEach","userID","userToSignal","callerID","Peer","initiator","trickle","signal","createPeer","id","peerID","oldTwo","incomingSignal","addPeer","old","find","p","oldMsgs","receiveMessage","muted","index","getAudioTracks","enabled","getVideoTracks","track","stop","replaceTrack","getDisplayMedia","cursor","screenStream","getTracks","onended","messageObject","App","path","exact","component","store","configureStore","reducer","userReducer","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.a7295e17.chunk.js","sourcesContent":["// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counter/counterAPI';\n\nconst initialState = {\n  user: null,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: (state) => {\n      state.user = null;\n    }\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { login, logout } = userSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectUser = (state) => state.user.user;\n\n\n\nexport default userSlice.reducer;\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://zoom-002-oct04.herokuapp.com'\r\n    // http://localhost:8000\r\n    // https://zoom-002-oct04.herokuapp.com'\r\n})\r\n\r\nexport default instance","import React, { useState } from 'react'\r\nimport axios from '../axios';\r\nimport './Modal.css'\r\n\r\nexport default function Modal({ open, children, onclose }) {\r\n    const[lang, setLang] = useState(\"\");\r\n    const[capacity, setCapacity] = useState(\"\");\r\n    const[input, setInput] = useState(\"\");\r\n    if (!open) return null\r\n\r\n    const createRoom = async(e) => {\r\n        e.preventDefault();\r\n    \r\n        await axios.post('/newroom', {\r\n            \"name\": input,\r\n            \"lang\": lang,\r\n            \"capacity\": capacity\r\n        });\r\n\r\n        // console.log(input, capacity, lang);\r\n\r\n        setCapacity('')\r\n        setLang('')\r\n        setInput('');\r\n        onclose();\r\n    }\r\n\r\n    // console.log(lang)\r\n    // console.log(capacity)\r\n    // console.log(input);\r\n    return (\r\n        <>\r\n            <div className=\"overlay\" />\r\n            <div className=\"modal\">\r\n                <div className=\"modal_top\">\r\n                    <div className=\"model_top_left\">\r\n                        <p>Topic</p>\r\n                        <input value={input} onChange={e => setInput(e.target.value)} placeholder=\"Any topic\"/>\r\n                    </div>\r\n                    <div className=\"model_top_right\">\r\n                        <p>Maximum People</p>\r\n                        <select value={capacity} onChange={e => setCapacity(e.target.value)}>\r\n                            <option value=\"unlimited\">Unlimited</option>\r\n                            <option value=\"1\">1</option>\r\n                            <option value=\"2\">2</option>\r\n                            <option value=\"3\">3</option>\r\n                            <option value=\"4\">4</option>\r\n                            <option value=\"5\">5</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"modal_bottom\">\r\n                    <p>Language</p>\r\n                    <select value={lang} onChange={e => setLang(e.target.value)}>\r\n                        <option value=\"\" disabled selected hidden>Select a language</option>\r\n                        <option value=\"English\">English</option>\r\n                        <option value=\"Korean\">Korean</option>\r\n                        <option value=\"Sinhala\">Sinhala</option>\r\n                        <option value=\"Javanese\">Javanese</option>\r\n                        <option value=\"Chinese\">Chinese</option>\r\n                        <option value=\"5\">Hindi</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"modal_button\">\r\n                    <button onClick={onclose}>cancel</button>\r\n                    <button onClick={createRoom}>create</button>\r\n                </div>\r\n\r\n                {children}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { createContext, useState } from 'react';\r\n\r\nconst RoomContext = createContext();\r\n\r\nconst RoomProvider = ({ children }) => {\r\n    const [peers, setPeers] = useState([]);\r\n    const [socketName, setSocketName] = useState([]);\r\n    const [twoSocketName, setTwoSocketName] = useState([]);\r\n\r\n    return (\r\n        <RoomContext.Provider value={{ peers, setPeers, socketName, twoSocketName, setSocketName, setTwoSocketName }}>\r\n            {children}\r\n        </RoomContext.Provider>\r\n    )\r\n}\r\n\r\nexport  {RoomProvider,RoomContext};","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport axios from '../axios';\r\nimport { GoogleLogout } from 'react-google-login'\r\nimport { useGoogleLogout } from 'react-google-login'\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../features/userSlice\";\r\nimport './CreateRoom.css';\r\nimport { FaCaretDown } from \"react-icons/fa\";\r\nimport Modal from \"../components/Modal\";\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport FreeBreakfastTwoToneIcon from '@mui/icons-material/FreeBreakfastTwoTone';\r\nimport GamesOutlinedIcon from '@mui/icons-material/GamesOutlined';\r\nimport VerifiedUserOutlinedIcon from '@mui/icons-material/VerifiedUserOutlined';\r\nimport FacebookIcon from '@mui/icons-material/Facebook';\r\nimport PersonOutlineOutlinedIcon from '@mui/icons-material/PersonOutlineOutlined';\r\nimport LogoutOutlinedIcon from '@mui/icons-material/LogoutOutlined';\r\nimport CameraIcon from '@mui/icons-material/Camera';\r\nimport SettingsOutlinedIcon from '@mui/icons-material/SettingsOutlined';\r\nimport CallOutlinedIcon from '@mui/icons-material/CallOutlined';\r\nimport { RoomContext } from \"../components/RoomContext\";\r\nconst CreateRoom = (props) => {\r\n    const { peers} = useContext(RoomContext);\r\n    const user = useSelector(selectUser);\r\n    const [roomnames, setRoomnames] = useState([]);\r\n    const [input, setInput] = useState(\"\");\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [dropDown, setDropDown] = useState(false);\r\n    const history = useHistory();\r\n\r\n    // const { signOut, loaded } = useGoogleLogout({})\r\n\r\n    useEffect(() => {\r\n        axios.get('/get')\r\n            .then(response => {\r\n                setRoomnames(response.data)\r\n            })\r\n    }, [roomnames])\r\n\r\n\r\n    // const sendName = async (e) => {\r\n    //     e.preventDefault();\r\n\r\n    //     await axios.post('/newroom', {\r\n    //         \"name\": input\r\n    //     });\r\n\r\n    //     setInput('');\r\n    // }\r\n\r\n    function create(_id) {\r\n        props.history.push(`/room/${_id}`);\r\n    }\r\n\r\n    const logout = () => {\r\n        window.location.reload();\r\n    }\r\n\r\n    // console.log(\"Hello\",peers)\r\n\r\n    return (\r\n        // <button onClick={create}>Create room</button>\r\n        <div className=\"full\">\r\n\r\n\r\n            <div className=\"create-room-main\">\r\n\r\n                <div className=\"top\">\r\n\r\n                    {/* <GoogleLogout\r\n                    clientId=\"658977310896-knrl3gka66fldh83dao2rhgbblmd4un9.apps.googleusercontent.com\"\r\n                    buttonText=\"Logout\"\r\n                    onLogoutSuccess={logout}\r\n                >\r\n                </GoogleLogout> */}\r\n\r\n                    <div className=\"top-left-img\">\r\n                        <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ_W9vt7UNUkNjcTDHLJToF7pH71bZzLDkj5__5IAUt_qLL8yCyleU5ACamuJ-XWMs3XE0&usqp=CAU\" alt=\"\" />\r\n                    </div>\r\n                    <div className=\"lssa\">\r\n                        <div className=\"top-right\" onClick={() => setDropDown((prevState) => !prevState)} >\r\n                            <div className=\"top-right-img\">\r\n                                <img src={user.image} alt=\"\" />\r\n                            </div>\r\n\r\n                            <span>{user.name}</span>\r\n                            <FaCaretDown className=\"icon\" />\r\n                        </div>\r\n\r\n                        {dropDown &&\r\n                            <div className=\"top-right-menu\">\r\n                                <div className=\"top-right-menu-top\">\r\n                                    <div className=\"top-right-menu-top-img\">\r\n                                        <img src={user.image} alt=\"\" />\r\n                                    </div>\r\n                                    <h3>{user.name}</h3>\r\n                                    <span>{user.email}</span>\r\n                                </div>\r\n\r\n                                <div className=\"top-right-menu-below\">\r\n                                    <div className=\"top-right-menu-below-one\" onClick={() => history.push(\"/profile\")}><PersonOutlineOutlinedIcon className=\"menu-icon\" /> <p>Your Profile</p></div>\r\n                                    <div className=\"top-right-menu-below-one\"><LogoutOutlinedIcon className=\"menu-icon\" />\r\n                                        <GoogleLogout\r\n                                            clientId=\"658977310896-knrl3gka66fldh83dao2rhgbblmd4un9.apps.googleusercontent.com\"\r\n                                            render={renderProps => (\r\n                                                <p onClick={renderProps.onClick} disabled={renderProps.disabled}>LogOut</p>\r\n                                            )}\r\n                                            buttonText=\"Login\"\r\n                                            onLogoutSuccess={logout}\r\n                                        />\r\n                                        {/* <p>LogOut</p> */}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"header-title\">\r\n                    <p> Language Practice Community </p>\r\n                </div>\r\n\r\n                <div className=\"header-top\">\r\n                    <div onClick={() => setIsOpen(true)} className=\"popup-button\">\r\n                        <AddIcon className=\"addIcon\" />\r\n                        <button > Create New Room </button>\r\n                    </div>\r\n                    <Modal open={isOpen} onclose={() => setIsOpen(false)} />\r\n\r\n                    <div className=\"buy-me-coffee\">\r\n                        <FreeBreakfastTwoToneIcon className=\"breakIcon\" />\r\n                        <button> buy me a coffe </button>\r\n                    </div>\r\n                    <div className=\"herder-top-button\">\r\n                        <GamesOutlinedIcon className=\"herder-top-icon\" />\r\n                        <button> Free4Talk App </button>\r\n                    </div>\r\n                    <div className=\"herder-top-button\">\r\n                        <VerifiedUserOutlinedIcon className=\"herder-top-icon\" />\r\n                        <button> Privacy Policy </button>\r\n                    </div>\r\n                    <div className=\"herder-top-button\">\r\n                        <FacebookIcon className=\"herder-top-icon\" />\r\n                        <button> Facebook group </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"header-mid\">\r\n\r\n                </div>\r\n\r\n                {/* <form >\r\n                    <input value={input} onChange={e => setInput(e.target.value)}\r\n                        placeholder=\"Type a Room Name\" type=\"text\" className=\" border border-gray-800\" />\r\n                    <button onClick={sendName} type=\"submit\" className=\"hidden\" >Click</button>\r\n                </form> */}\r\n\r\n                <div className=\"names\">\r\n                    {roomnames.map((roomname, i) => (\r\n                        <div className=\"form\" key={i}>\r\n                            <div className=\"form__top\">\r\n                                <CameraIcon className=\"form__top-icon\" />\r\n                                <p>{roomname.name}</p>\r\n                                <SettingsOutlinedIcon className=\"form__top-icon\" />\r\n                            </div>\r\n                            <div className=\"form__middle\">\r\n                                <img src={user.image} alt=\"\" />\r\n                            </div>\r\n                            <div className=\"form__end\">\r\n                                <div className=\"form__end-border\">\r\n                                    <CallOutlinedIcon className=\"form__end-icon\"/>\r\n                                    <button\r\n                                        onClick={() => {\r\n                                            create(roomname._id)\r\n                                        }}\r\n                                    >Join and talk now!</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateRoom;\r\n","import React from 'react';\r\nimport GoogleLogin from 'react-google-login';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../features/userSlice';\r\nimport './Login.css';\r\nimport Button from '@mui/material/Button';\r\n\r\nfunction Login() {\r\n    const dispatch = useDispatch();\r\n\r\n    const responseGoogle = (response) => {\r\n        console.log(response.profileObj);\r\n        dispatch(\r\n            login({\r\n                name: response.profileObj.name,\r\n                image: response.profileObj.imageUrl,\r\n                email: response.profileObj.email,\r\n            })\r\n        )\r\n    }\r\n\r\n    // console.log({name})\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__container\">\r\n                <img\r\n                    src=\"https://www.seekpng.com/png/full/87-873512_phone-call-logo-png-mobile-calling-logo-png.png\"\r\n                    alt=\"\"\r\n                />\r\n                <div className=\"login__text\">\r\n                    <h1>Sign in to Free4talk</h1>\r\n                </div>\r\n                <GoogleLogin\r\n                    clientId=\"988836340451-pqpi4evnl7qut2h2b647p5rttkjrqbg0.apps.googleusercontent.com\"\r\n                    render={renderProps => (\r\n                        <Button onClick={renderProps.onClick} disabled={renderProps.disabled}>Sign In With Google</Button>\r\n                    )}\r\n                    buttonText=\"Login\"\r\n                    onSuccess={responseGoogle}\r\n                    isSignedIn={true}\r\n                />\r\n            </div>\r\n            {/* <h1>Hello...</h1>\r\n\r\n            <GoogleLogin\r\n              clientId=\"988836340451-pqpi4evnl7qut2h2b647p5rttkjrqbg0.apps.googleusercontent.com\"\r\n              onSuccess={responseGoogle}\r\n              isSignedIn={true}\r\n            /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from '../features/userSlice';\r\nimport { GoogleLogout } from 'react-google-login';\r\nimport './Profile.css';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\nfunction Profile() {\r\n    const user = useSelector(selectUser)\r\n    const history = useHistory();\r\n\r\n    const logout = () => {\r\n        history.push(\"/\")\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <div className=\"profileScreen\">\r\n            <div className=\"profileScreen__body\">\r\n                <h1>My Profile</h1>\r\n                <div className=\"profileScreen__info\">\r\n                    <img src={user.image} alt=\"\" />\r\n                    <div className=\"profileScreen__details\">\r\n                        <h2>{user.name}</h2>\r\n                        <p>{user.email}</p>\r\n                        <GoogleLogout\r\n                            clientId=\"658977310896-knrl3gka66fldh83dao2rhgbblmd4un9.apps.googleusercontent.com\"\r\n                            render={renderProps => (\r\n                                <button onClick={renderProps.onClick} disabled={renderProps.disabled} className=\"profileScreen__signOut\">Sign Out</button>\r\n                            )}\r\n                            buttonText=\"Login\"\r\n                            onLogoutSuccess={logout}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React from 'react'\r\nimport './CallPageFooter.scss';\r\nimport { FaAngleUp, FaClosedCaptioning, FaDesktop, FaMicrophone, FaMicrophoneSlash, FaPhone, FaVideo, FaVideoSlash } from \"react-icons/fa\";\r\nfunction CallPageFooter({\r\n    isAudio,\r\n    toggleAudio,\r\n    isVideo,\r\n    toggleVideo,\r\n    isPresenting,\r\n    stopScreenShare,\r\n    screenShare,\r\n    disconnectCall,\r\n}) {\r\n    return (\r\n        <div className=\"footer-items\">\r\n            <div className=\"left-item\">\r\n                <div className=\"icon-block\">\r\n                    Meeting details\r\n                    <FaAngleUp className=\"icon\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"center-item\">\r\n                <div className={`icon-block ${!isAudio ? \"red-bg\" : null}`} onClick={() => toggleAudio(!isAudio)}>\r\n                    {isAudio ? <FaMicrophone className=\"icon\"/> : <FaMicrophoneSlash className=\"icon\"/>}\r\n                    \r\n                </div>\r\n                <div className=\"icon-block\" onClick={disconnectCall}>\r\n                    <FaPhone className=\"icon red\"/>\r\n                </div>\r\n                <div className={`icon-block ${!isVideo ? \"red-bg\" : null}`} onClick={() => toggleVideo(!isVideo)}>\r\n                    {isVideo ? <FaVideo className=\"icon\"/> : <FaVideoSlash className=\"icon\"/>}\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"right-item\">\r\n                <div className=\"icon-block\">\r\n                    <FaClosedCaptioning className=\"icon red\"/>\r\n                    <p className=\"title\"> Turn on caption </p>\r\n                </div>\r\n                {isPresenting ? (\r\n                    <div className=\"icon-block\" onClick={stopScreenShare}>\r\n                        <FaDesktop className=\"icon red\"/>\r\n                        <p className=\"title\"> Stop Present </p>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"icon-block\" onClick={screenShare}>\r\n                        <FaDesktop className=\"icon red\"/>\r\n                        <p className=\"title\"> Present now </p>\r\n                    </div>\r\n                )}\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CallPageFooter\r\n","import moment from 'moment';\r\n\r\nexport const formatDate = (timestamp) => {\r\n    return moment(timestamp).format(\"h:mm A\");\r\n};","import React, { useContext, useEffect, useState } from 'react'\r\nimport './CallPageHeader.scss';\r\nimport { FaUserFriends, FaCommentAlt, FaUserCircle } from \"react-icons/fa\";\r\nimport { formatDate } from '../utils/helpers';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from '../../features/userSlice';\r\nimport { RoomContext } from '../RoomContext';\r\nfunction CallPageHeader({\r\n    isMessenger,\r\n    setIsMessenger,\r\n    messageAlert,\r\n    setMessageAlert,\r\n}) {\r\n    const user = useSelector(selectUser);\r\n    const { peers } = useContext(RoomContext);\r\n\r\n    let interval = null;\r\n    const [currentTime, setCurrentTime] = useState(() => {\r\n        return formatDate();\r\n    });\r\n\r\n    useEffect(() => {\r\n        interval = setInterval(() => setCurrentTime(formatDate()), 1000);\r\n        return () => {\r\n            clearInterval(interval);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"frame-header\">\r\n            <div className=\"header-items icon-block\">\r\n                <FaUserFriends className=\"icon\"/>\r\n                <span className=\"alert-circle-icon\">{peers.length + 1}</span>\r\n            </div>\r\n            <div className=\"header-items icon-block\" onClick={() => {\r\n                setIsMessenger(true);\r\n                // setMessageAlert({});\r\n            }}>\r\n                <FaCommentAlt className=\"icon\"/>\r\n                {/* {!isMessenger && messageAlert.alert && (\r\n                    <span className=\"alert-circle-icon\"></span>\r\n                )} */}\r\n                \r\n            </div>\r\n            <div className=\"header-items date-block\">{currentTime}</div>\r\n            <div className=\"header-items icon-block\">\r\n                <FaUserCircle src={user.image} className=\"icon profile\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CallPageHeader\r\n","import React, { useContext } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from '../../features/userSlice';\r\nimport { RoomContext } from '../RoomContext'\r\n\r\nfunction PresentName() {\r\n    const { socketName, twoSocketName} = useContext(RoomContext);\r\n    const user = useSelector(selectUser);\r\n    console.log('socketName', socketName);\r\n    console.log('twoSocketName', twoSocketName);\r\n    return (\r\n        <div>\r\n            <p>{user.name} - (me)</p>\r\n\r\n            {socketName.map((item) => (\r\n                <p>{item}</p>\r\n            ))}\r\n\r\n            {twoSocketName.map((two) => (\r\n                <p>{two}</p>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PresentName\r\n","import React, { useState } from 'react'\r\nimport './Messenger.scss'\r\nimport { FaCommentAlt, FaPaperPlane, FaTimes, FaUserFriends } from \"react-icons/fa\";\r\nimport PresentName from './PresentName';\r\n// import { formatDate } from '../utils/helpers';\r\nfunction Messenger({ setIsMessenger, sendMsg, messageList, messages, message, handleChange, sendMessage, peers }) {\r\n    const [presentName, setPresentName] = useState(false);\r\n    // console.log('socketName', socketName);\r\n    return (\r\n        <div className=\"messenger-container\">\r\n            \r\n            <div className=\"messenger-header\">\r\n                <h3>Meeting Details</h3>\r\n                {/* {socketName.map((item) => (\r\n\r\n                    <p>{item}</p>\r\n                ))}\r\n                {twoSocketName.map((two) => (\r\n                    <p>{two}</p>\r\n                ))} */}\r\n                <FaTimes className=\"icon\" onClick={() => {\r\n                    setIsMessenger(false);\r\n                }} />\r\n            </div>\r\n            <div className=\"messenger-header-tabs\">\r\n                <div className={`tab ${presentName && \"active\"} `}  onClick={() => {\r\n                setPresentName(true);\r\n            }}>\r\n                    <FaUserFriends />\r\n                    <p>People {peers.length + 1}</p>\r\n                </div>\r\n                <div className={`tab ${!presentName && \"active\"} `} onClick={() => {\r\n                setPresentName(false);\r\n            }}>\r\n                    <FaCommentAlt className=\"icon\" />\r\n                    <p>Chat</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"chat-section\">\r\n                {presentName ? (\r\n                    <PresentName\r\n                    // socketName={socketName}\r\n                    />\r\n                ): (\r\n                    <div>\r\n                        {messages.map((message) => {\r\n                        return(\r\n                            <div className=\"chat-block\">\r\n                            <div className=\"sender\">\r\n                                you <small> 10 PM </small>\r\n                            </div>\r\n                            <p className=\"msg\">{message.body}</p>\r\n                        </div>\r\n                        )\r\n                        \r\n                    })}\r\n                    </div>\r\n                    \r\n                )}\r\n            \r\n                \r\n                \r\n\r\n            </div>\r\n\r\n            <div className=\"send-msg-section\">\r\n                <input\r\n                    placeholder=\"Send a message to everyone\"\r\n                    value={message}\r\n                    onChange={handleChange}\r\n                />\r\n                <FaPaperPlane className=\"icon\" onClick={sendMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messenger\r\n","import React, { useContext, useEffect, useReducer, useRef, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport styled from \"styled-components\";\r\nimport CallPageFooter from \"../components/CallPageFooter/CallPageFooter\";\r\nimport CallPageHeader from \"../components/CallPageHeader/CallPageHeader\";\r\nimport Messenger from \"../components/Messenger/Messenger\";\r\nimport MessageListReducer from '../reducers/MessageListReducer';\r\nimport { RoomContext } from \"../components/RoomContext\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../features/userSlice\";\r\n// let peer = null;\r\nconst Container = styled.div`\r\n    height: 100vh;\r\n    width: 100%;\r\n    object-fit: cover;\r\n    position: absolute;\r\n    z-index: -1;\r\n    top: 0;\r\n    left: 0;\r\n    background: black;\r\n`;\r\n\r\nconst StyledVideo = styled.video`\r\n    height: 40%;\r\n    width: 50%;\r\n`;\r\n\r\nconst Video = (props) => {\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n        props.peer.on(\"stream\", stream => {\r\n            ref.current.srcObject = stream;\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <StyledVideo playsInline autoPlay ref={ref} />\r\n    );\r\n}\r\n\r\n\r\nconst videoConstraints = {\r\n    height: window.innerHeight / 2,\r\n    width: window.innerWidth / 2\r\n};\r\n\r\nconst initialState = [];\r\n\r\nconst Room = (props) => {\r\n    const { peers, setPeers } = useContext(RoomContext);\r\n    const { setSocketName, setTwoSocketName } = useContext(RoomContext);\r\n    const user = useSelector(selectUser);\r\n    const history = useHistory();\r\n    let alertTimeout = null;\r\n\r\n    // const [messageList, messageListReducer] = useReducer(\r\n    //     MessageListReducer,\r\n    //     initialState\r\n    // );\r\n\r\n    // const [peers, setPeers] = useState([]);\r\n    const socketRef = useRef();\r\n    const userVideo = useRef();\r\n    const peersRef = useRef([]);\r\n    const [streamObj, setStreamObj] = useState();\r\n    const [screenCastStream, setScreenCastStream] = useState();\r\n    const [isPresenting, setIsPresenting] = useState(false);\r\n    const [isAudio, setIsAudio] = useState(true);\r\n    const [isVideo, setIsVideo] = useState(true);\r\n    const roomID = props.match.params.roomID;\r\n    const [me, setMe] = useState();\r\n    const [isMessenger, setIsMessenger] = useState(false);\r\n    // const [messageAlert, setMessageAlert] = useState({});\r\n    const [messages, setMessages] = useState([]);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [name, setName] = useState(user.name);\r\n    // const [socketName, setSocketName] = useState([]);\r\n    // const [twoSocketName, setTwoSocketName] = useState([]);\r\n\r\n    // let myVideoStream;\r\n    useEffect(() => {\r\n        socketRef.current = io.connect(\"/\");\r\n        navigator.mediaDevices.getUserMedia({ video: videoConstraints, audio: true }).then(stream => {\r\n            setStreamObj(stream)\r\n            // myVideoStream = stream;\r\n            userVideo.current.srcObject = stream;\r\n            socketRef.current.emit(\"join room\", roomID);\r\n            socketRef.current.on(\"all users\", users => {\r\n                const peers = [];\r\n                users.forEach(userID => {\r\n                    const peer = createPeer(userID, socketRef.current.id, stream);\r\n                    peersRef.current.push({\r\n                        peerID: userID,\r\n                        peer,\r\n                    })\r\n                    peers.push(peer);\r\n                })\r\n                setPeers(peers);\r\n            })\r\n\r\n            socketRef.current.on(\"user joined\", payload => {\r\n                setTwoSocketName(oldTwo=> [...oldTwo, payload.name])\r\n                const peer = addPeer(payload.signal, payload.callerID, stream, payload.name);\r\n                \r\n                peersRef.current.push({\r\n                    peerID: payload.callerID,\r\n                    peer,\r\n                })\r\n\r\n                setPeers(users => [...users, peer]);\r\n            });\r\n\r\n            socketRef.current.on(\"receiving returned signal\", payload => {\r\n                setSocketName(old=> [...old, payload.name])\r\n                const item = peersRef.current.find(p => p.peerID === payload.id);\r\n                item.peer.signal(payload.signal);\r\n            });\r\n\r\n            socketRef.current.on(\"message\", (message) => {\r\n                receiveMessage(message);\r\n            });\r\n            // socketRef.current.on(\"data\", (data) => {\r\n            //     clearTimeout(alertTimeout);\r\n            //     messageListReducer({\r\n            //       type: \"addMessage\",\r\n            //       payload: {\r\n            //         user: \"other\",\r\n            //         msg: data.toString(),\r\n            //         time: Date.now(),\r\n            //       },\r\n            //     });\r\n            // });\r\n        })\r\n    }, []);\r\n\r\n\r\n    function receiveMessage(message) {\r\n        setMessages(oldMsgs => [...oldMsgs, message]);\r\n    }\r\n\r\n    function sendMessage(e) {\r\n        e.preventDefault();\r\n        const messageObject = {\r\n            body: message,\r\n        };\r\n        setMessage(\"\");\r\n        socketRef.current.emit(\"send message\", messageObject);\r\n    }\r\n\r\n    function handleChange (e) {\r\n        setMessage(e.target.value);\r\n    }\r\n\r\n    function createPeer(userToSignal, callerID, stream) {\r\n        const peer = new Peer({\r\n            initiator: true,\r\n            trickle: false,\r\n            stream,\r\n        });\r\n\r\n        peer.on(\"signal\", signal => {\r\n            socketRef.current.emit(\"sending signal\", { userToSignal, callerID, signal, name })\r\n        })\r\n\r\n        setMe(peer);\r\n        return peer;\r\n    }\r\n\r\n\r\n    function addPeer(incomingSignal, callerID, stream, name) {\r\n        \r\n        const peer = new Peer({\r\n            initiator: false,\r\n            trickle: false,\r\n            stream,\r\n        })\r\n\r\n        peer.on(\"signal\", signal => {\r\n            socketRef.current.emit(\"returning signal\", { signal, callerID, name })\r\n        })\r\n\r\n        peer.signal(incomingSignal);\r\n\r\n        setMe(peer);\r\n        return peer;\r\n    }\r\n\r\n    const toggleAudio = (value) => {\r\n        streamObj.getAudioTracks()[0].enabled = value;\r\n        setIsAudio(value);\r\n    }\r\n\r\n    const toggleVideo = (value) => {\r\n        streamObj.getVideoTracks()[0].enabled = value;\r\n        setIsVideo(value);\r\n    }\r\n\r\n    const screenShare = () => {\r\n        navigator.mediaDevices\r\n          .getDisplayMedia({ cursor: true })\r\n          .then((screenStream) => {\r\n            me.replaceTrack(\r\n              streamObj.getVideoTracks()[0],\r\n              screenStream.getVideoTracks()[0],\r\n              streamObj\r\n            );\r\n            setScreenCastStream(screenStream);\r\n            screenStream.getTracks()[0].onended = () => {\r\n                me.replaceTrack(\r\n                screenStream.getVideoTracks()[0],\r\n                streamObj.getVideoTracks()[0],\r\n                streamObj\r\n              );\r\n            };\r\n            setIsPresenting(true);\r\n          });\r\n      };\r\n    \r\n      const stopScreenShare = () => {\r\n        screenCastStream.getVideoTracks().forEach(function (track) {\r\n          track.stop();\r\n        });\r\n        me.replaceTrack(\r\n          screenCastStream.getVideoTracks()[0],\r\n          streamObj.getVideoTracks()[0],\r\n          streamObj\r\n        );\r\n        setIsPresenting(false);\r\n      };\r\n\r\n    const disconnectCall = () => {\r\n        // me.destroy();\r\n        history.push(\"/\");\r\n        window.location.reload();\r\n    }\r\n\r\n    // const sendMsg = (msg) => {\r\n    //     me.send(msg);\r\n    //     messageListReducer({\r\n    //         type: \"addMessage\",\r\n    //         payload: {\r\n    //             user: \"you\",\r\n    //             msg: msg,\r\n    //             time: Date.now(),\r\n\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n    console.log(me);\r\n    console.log(peers);\r\n    console.log(name)\r\n    // console.log('socketName', socketName);\r\n    // console.log('twoSocketName', twoSocketName);\r\n    return (\r\n        <Container>\r\n            <StyledVideo muted ref={userVideo} autoPlay playsInline />\r\n            {/* <div onClick={() => toggleAudio(!isAudio)}>\r\n                <button>Microphone</button>\r\n            </div>\r\n            <div onClick={() => toggleVideo(!isVideo)}>\r\n                <button>Video</button>\r\n            </div> */}\r\n            \r\n            {/* <button onClick={playStop}> CLICK </button> */}\r\n            {peers.map((peer, index) => {\r\n                return (\r\n                    <Video key={index} peer={peer} />\r\n                );\r\n            })}\r\n\r\n            <CallPageHeader\r\n            isMessenger={isMessenger}\r\n            setIsMessenger={setIsMessenger}\r\n            // messageAlert={messageAlert}\r\n            // setMessageAlert={setMessageAlert}\r\n            />\r\n            <CallPageFooter \r\n            isAudio={isAudio}\r\n            toggleAudio={toggleAudio}\r\n            isVideo={isVideo}\r\n            toggleVideo={toggleVideo}\r\n            isPresenting={isPresenting}\r\n            stopScreenShare={stopScreenShare}\r\n            screenShare={screenShare}\r\n            disconnectCall={disconnectCall}\r\n            />\r\n            {isMessenger ? (\r\n                <Messenger\r\n                setIsMessenger={setIsMessenger}\r\n                message={message}\r\n                messages={messages}\r\n                handleChange={handleChange}\r\n                sendMessage={sendMessage}\r\n                peers={peers}\r\n                // socketName={socketName}\r\n                // twoSocketName={twoSocketName}\r\n                // sendMsg={sendMsg}\r\n                // messageList={messageList}\r\n                />\r\n            ): null}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Room;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport { selectUser } from './features/userSlice';\r\nimport CreateRoom from \"./routes/CreateRoom\";\r\nimport Login from './routes/Login';\r\nimport Profile from './routes/Profile';\r\nimport Room from \"./routes/Room\";\r\n\r\n// import {RoomProvider} from './components/RoomContext';\r\nimport {RoomProvider} from './components/RoomContext';\r\nfunction App() {\r\n  const user = useSelector(selectUser);\r\n\r\n  return (\r\n    <RoomProvider>\r\n      <BrowserRouter>\r\n        {!user ? (\r\n          <Login />\r\n        ) : (\r\n          <Switch>\r\n            <Route path=\"/\" exact component={CreateRoom} />\r\n            <Route path=\"/room/:roomID\" component={Room} />\r\n            <Route path=\"/profile\" component={Profile} />\r\n          </Switch>\r\n        )}\r\n      </BrowserRouter>\r\n      \r\n    </RoomProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../features/userSlice';\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}